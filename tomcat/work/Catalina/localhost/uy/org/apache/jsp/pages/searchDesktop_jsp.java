/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-11-11 02:55:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import datatypes.DtUsuarioExt;
import datatypes.DtProfesorExt;
import datatypes.DtClaseExt;
import datatypes.DtCuponera;
import datatypes.DtActividadDeportivaExt;
import datatypes.DtSocioExt;

public final class searchDesktop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("datatypes.DtCuponera");
    _jspx_imports_classes.add("datatypes.DtUsuarioExt");
    _jspx_imports_classes.add("datatypes.DtProfesorExt");
    _jspx_imports_classes.add("java.util.Set");
    _jspx_imports_classes.add("datatypes.DtActividadDeportivaExt");
    _jspx_imports_classes.add("datatypes.DtSocioExt");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("datatypes.DtClaseExt");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!--BARRA DE NAVEGACION-->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/template/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!--CUERPO DE LA PAGINA WEB-->\r\n");
      out.write("    <div class=\"container-fluid mt-4\">\r\n");
      out.write("		<div class=\"row mx-3 mx-md-5\">\r\n");
      out.write("        	<div class=\"ins-cat col-2\">\r\n");
      out.write("          		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/template/stdLeftSection.jsp", out, false);
      out.write("\r\n");
      out.write("        	</div>\r\n");
      out.write("			<!-- Comienzo Listado usuario -->		\r\n");
      out.write("			");
List<List<?>> listaDeListas = new ArrayList<List<?>>();
			listaDeListas.add((List<?>) request.getAttribute("actividades"));
			listaDeListas.add((List<?>) request.getAttribute("clases"));
			listaDeListas.add((List<?>) request.getAttribute("cuponeras"));
			listaDeListas.add((List<?>) request.getAttribute("usuarios"));
			
			// Guarda el link para la nueva request de los formularios:
			String link = "/search?campoTexto=" + ((String) request.getAttribute("searchText"));
			if (request.getAttribute("actividades") != null)
				link += "&actividades=yes";
			if (request.getAttribute("clases") != null)
				link += "&clases=yes";
			if (request.getAttribute("cuponeras") != null)
				link += "&cuponeras=yes";
			if (request.getAttribute("usuarios") != null)
				link += "&usuarios=yes";
			
			// Auxiliares para el orden y filtro:
			String orden = (String) request.getAttribute("orden");
			Set<?> listaInstituciones = (Set<?>) request.getAttribute("instituciones");
			Set<?> listaCategorias = (Set<?>) request.getAttribute("categorias");
			Set<?> filtro = null;
			
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			");
 /* Comienza la magia */ 
      out.write("\r\n");
      out.write("		\r\n");
      out.write("			<div class=\"col-md-8\">\r\n");
      out.write("				<div class=\"container-fluid\">\r\n");
      out.write("					<div class=\"row px-3\">\r\n");
      out.write("						<div class=\"col\">\r\n");
      out.write("							");
int cantidadResultados = 0;
							for (List<?> lista : listaDeListas) {
								if (lista != null) { 
									cantidadResultados += lista.size();
								}
							} 
      out.write("\r\n");
      out.write("				        	<h4><strong>");
      out.print(cantidadResultados);
      out.write(" resultados.</strong></h4>\r\n");
      out.write("				        </div>\r\n");
      out.write("				        <div class=\"col-md-auto\">\r\n");
      out.write("				        		Ordenar por:\r\n");
      out.write("				        </div>\r\n");
      out.write("				        <div class=\"col-md-auto\">\r\n");
      out.write("				        	<div id=\"divOrder\" class=\"mb-auto\">\r\n");
      out.write("				        		");
String linkAndFiltro = link;
				        		  filtro = (Set<?>) request.getAttribute("filtroInsti");
				        		  int count = 1;
				        		  for (Object x : filtro) {
				        			  linkAndFiltro += "&fltrI" + count + "=" + (String)x;
				        			  count++;
				        		  }
				        		  filtro = (Set<?>) request.getAttribute("filtroCat");
				        		  count = 1;
				        		  for (Object x : filtro) {
				        			  linkAndFiltro += "&fltrC" + count + "=" + (String)x;
				        			  count++;
				        		  } 
      out.write("\r\n");
      out.write("				        		<form name=\"orden\" action=\"");
      out.print(request.getContextPath() + linkAndFiltro);
      out.write("\" method=\"POST\">\r\n");
      out.write("			                    	<select id=\"sort\" name=\"sort\" class=\"form-select\" data-live-search=\"true\" onchange=\"this.form.submit()\">\r\n");
      out.write("			                            <option value=\"alfaDesc\" \r\n");
      out.write("			                            	");
if (orden.equals("alfaDesc")) {
      out.write(" selected=\"selected\" ");
 } 
      out.write(">Alfabeticamente (A-Z a-z)</option>\r\n");
      out.write("			                            <option value=\"alfaAsc\"\r\n");
      out.write("			                            	");
if (orden.equals("alfaAsc")) {
      out.write(" selected=\"selected\" ");
 } 
      out.write(">Alfabeticamente (z-a Z-A)</option>\r\n");
      out.write("			                            ");
if (request.getAttribute("usuarios") == null) {
      out.write("	\r\n");
      out.write("			                            <option value=\"fechaDesc\"\r\n");
      out.write("			                            	");
if (orden.equals("fechaDesc")) {
      out.write(" selected=\"selected\" ");
 } 
      out.write(">Fecha de registro (descendente)</option>\r\n");
      out.write("			                            <option value=\"fechaAsc\"\r\n");
      out.write("			                            	");
if (orden.equals("fechaAsc")) {
      out.write(" selected=\"selected\" ");
 } 
      out.write(">Fecha de registro (ascendente)</option>\r\n");
      out.write("			                            ");
 } 
      out.write("\r\n");
      out.write("			                        </select>\r\n");
      out.write("			                	</form>\r\n");
      out.write("		                    </div>\r\n");
      out.write("				        </div>\r\n");
      out.write("				        ");
if ((request.getAttribute("actividades") != null) || (request.getAttribute("cuponeras") != null)) {
      out.write("\r\n");
      out.write("				        <div class=\"col-md-auto\">\r\n");
      out.write("				        	<button type=\"button\" id=\"btn-filtro\" class=\"btn-ir btn btn-primary mb-auto\" data-bs-toggle=\"modal\" data-bs-target=\"#filtroModal\">\r\n");
      out.write("			                	Filtrar\r\n");
      out.write("			              	</button>\r\n");
      out.write("				        </div>\r\n");
      out.write("				        ");
 } 
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("		        </div>\r\n");
      out.write("				");
for (List<?> lista : listaDeListas) {
					if ((lista != null) && (!lista.isEmpty())) {
						String listadoDeX = (lista.get(0) instanceof DtActividadDeportivaExt) ? "Actividades Deportivas" :
						(lista.get(0) instanceof DtClaseExt) ? "Clases" :
						(lista.get(0) instanceof DtCuponera) ? "Cuponeras" :
						(lista.get(0) instanceof DtUsuarioExt) ? "Usuarios" : new String();
      out.write("\r\n");
      out.write("		        		<div class=\"cabezal-usuarios py-1 \">\r\n");
      out.write("		            		<h2><strong>Listado de ");
      out.print(listadoDeX);
      out.write(": </strong></h2>\r\n");
      out.write("		            	</div>\r\n");
      out.write("		    			<div class=\"container-fluid\">\r\n");
      out.write("					  		<div class=\"\">\r\n");
      out.write("					    		<div class=\"row px-3\">\r\n");
      out.write("					    			");
for (int i = 0; i < 4; i++) { 
      out.write("\r\n");
      out.write("								    	<div class=\"col-md-3\">\r\n");
      out.write("								    	");
for (int j = i; j < lista.size(); j = j + 4) {
      out.write("\r\n");
      out.write("							    			<div class=\"card img-de-lista\">\r\n");
      out.write("							    				");
 /* En caso de desconocer el operador  _?_:_ googlear conditional operator */
							     				Object obj = lista.get(j);
							     						
									          	String tituloCarta = 
									          	(obj instanceof DtCuponera)? ((DtCuponera)obj).getNombre():
									          	(obj instanceof DtClaseExt)? ((DtClaseExt)obj).getNombre():
									          	(obj instanceof DtActividadDeportivaExt)? ((DtActividadDeportivaExt)obj).getNombre():
									          	((DtUsuarioExt)obj).getNickname();
									          	
							     				String descripcionCarta = 
											  	(obj instanceof DtCuponera)? ((DtCuponera)obj).getDescripcion():
											  	(obj instanceof DtClaseExt)? ((DtClaseExt)obj).getURL():	/* Clase no tiene descripcion :( */
											  	(obj instanceof DtActividadDeportivaExt)? ((DtActividadDeportivaExt)obj).getDescripcion():
											  	(obj instanceof DtProfesorExt)? ((DtProfesorExt)obj).getDescripcion():
											  	"Socio/a.";	/* Si no se cumple lo anterior se asume socio */ 
											  	
											  	String dirUrl = 
									          	(obj instanceof DtCuponera)? "/cuponeras?cuponera=" + ((DtCuponera)obj).getNombre():
									          	(obj instanceof DtClaseExt)? "/clases?clase=" + ((DtClaseExt)obj).getNombre():
									          	(obj instanceof DtActividadDeportivaExt)? "/actividades?actividad=" + ((DtActividadDeportivaExt)obj).getNombre():
									          	"/usuarios?nickname=" +((DtUsuarioExt)obj).getNickname();
									          	
									          	String dirImagen = 
									          	(obj instanceof DtCuponera)? "/api/content?c=cup&id=" +((DtCuponera)obj).getNombre():
									          	(obj instanceof DtClaseExt)? "/api/content?c=cla&id="+((DtClaseExt)obj).getNombre():
									          	(obj instanceof DtActividadDeportivaExt)? "/api/content?c=act&id="+((DtActividadDeportivaExt)obj).getNombre():
									          	"/api/content?c=usu&id=" + (new String(((DtUsuarioExt)obj).getNickname()));
      out.write("\r\n");
      out.write("									          	\r\n");
      out.write("									        	<a class=\"hyperlink-img\" href=\"");
      out.print(request.getContextPath() + dirUrl);
      out.write("\">\r\n");
      out.write("								        		<img class=\"card-img-top\" src=\"");
      out.print(request.getContextPath() + dirImagen);
      out.write("\" alt=\"default\">\r\n");
      out.write("								        		<div class=\"card-body\">											  \r\n");
      out.write("										          	<h5 class=\"card-title\"><strong>");
      out.print(tituloCarta);
      out.write("</strong></h5>\r\n");
      out.write("										          	<p class=\"card-text\">");
      out.print(descripcionCarta);
      out.write("</p>\r\n");
      out.write("										          	");
 if(obj instanceof DtActividadDeportivaExt && request.getSession().getAttribute("loggedUser") instanceof DtSocioExt){ 
										          			DtSocioExt ss = (DtSocioExt) request.getSession().getAttribute("loggedUser");
										          			if(ss.getActividadesFavoritas().contains(tituloCarta)){ 
      out.write("\r\n");
      out.write("				        											<button style=\"background-color: #ed2553; border-color: #ed2553;\" class=\"btn btn-primary\"><i class=\"fa-heart fa\"></i><span class=\"text\"></span>&nbsp;<span class=\"nobold\">(<span class=\"count\">");
      out.print(((DtActividadDeportivaExt)obj).getFavoritos());
      out.write("</span>)</span></button>\r\n");
      out.write("										          			");
} else{
      out.write("\r\n");
      out.write("																	<button id=\"favorite\"  style=\"background-color: #ed2553; border-color: #ed2553;\" class=\"btn btn-primary\"><i class=\"fa-heart far\"></i><span class=\"text\"></span>&nbsp;<span class=\"nobold\">(<span class=\"count\">");
      out.print(((DtActividadDeportivaExt)obj).getFavoritos());
      out.write("</span>)</span></button>\r\n");
      out.write("										          			");
} 
      out.write("\r\n");
      out.write("										          	");
}
      out.write("\r\n");
      out.write("										     	</div>\r\n");
      out.write("												</a>\r\n");
      out.write("											</div>\r\n");
      out.write("										");
 } 
      out.write("\r\n");
      out.write("										</div>\r\n");
      out.write("									");
 } 
      out.write("\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					");
 } 
      out.write("\r\n");
      out.write("				");
 } 
      out.write("		    \r\n");
      out.write("		    </div>\r\n");
      out.write("		    <!-- Fin listado -->\r\n");
      out.write("		    <div class=\"col-2 ps-1 ps-sm-2\">\r\n");
      out.write("		       	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/template/stdRightSection.jsp", out, false);
      out.write("\r\n");
      out.write("		    </div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("    <!--FOOTER-->\r\n");
      out.write("   	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/template/footer.jsp", out, false);
      out.write("\r\n");
      out.write("   	\r\n");
      out.write("   	<!--MODAL FILTRO-->\r\n");
      out.write("    <div class=\"modal fade\" id=\"filtroModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("	    <div class=\"modal-dialog\">\r\n");
      out.write("	        <div class=\"modal-content\">\r\n");
      out.write("	            <div class=\"modal-header\">\r\n");
      out.write("	                <img src=\"");
      out.print(request.getContextPath());
      out.write("/assets/images/misc/iconoEntrenamos-uy.png\" alt=\"EntrenamosUYLogo\" width=\"40\" height=\"30\" class=\"d-inline-block align-text-top img-fluid me-2 ms-2 mb-3\">\r\n");
      out.write("	                <h2 class=\"fw-bold mb-0\">Entrenamos.uy</h2>\r\n");
      out.write("	                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div class=\"modal-body\">\r\n");
      out.write("	                <form id=\"form-filtro\" action=\"");
      out.print(request.getContextPath() + link);
      out.write("&sort=");
      out.print(orden);
      out.write("\" method=\"POST\" accept-charset=\"utf-8\"> \r\n");
      out.write("	                	<h5 class=\"fw-bold mb-0\">Instituciones:</h5>\r\n");
      out.write("	                	");
int counter = 0;
	                	filtro = (Set<?>) request.getAttribute("filtroInsti");
	                	for (Object obj : listaInstituciones) {
	                		counter++;
      out.write("\r\n");
      out.write("	                    <div class=\"form-check float-left\">\r\n");
      out.write("	                        <input type=\"checkbox\" id=\"fltrI");
      out.print(counter);
      out.write("\" name=\"fltrI");
      out.print(counter);
      out.write("\" value=\"");
      out.print((String) obj);
      out.write("\" \r\n");
      out.write("	                        	");
if (filtro.contains((String) obj)) {
      out.write(" checked ");
 } 
      out.write(">\r\n");
      out.write("	                        <label for=\"fltrI");
      out.print(counter);
      out.write('"');
      out.write('>');
      out.print((String) obj);
      out.write("</label>\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    ");
 } 
      out.write("\r\n");
      out.write("	                    <h5 class=\"fw-bold mb-0\">Categorias:</h5>\r\n");
      out.write("	                    ");
counter = 0;
	                	filtro = (Set<?>) request.getAttribute("filtroCat");
	                    for (Object obj : listaCategorias) {
	                    	counter++;
      out.write("\r\n");
      out.write("	                    <div class=\"form-check float-left\">\r\n");
      out.write("	                        <input type=\"checkbox\" id=\"fltrC");
      out.print(counter);
      out.write("\" name=\"fltrC");
      out.print(counter);
      out.write("\" value=\"");
      out.print((String) obj);
      out.write("\"\r\n");
      out.write("	                        	");
if (filtro.contains((String) obj)) {
      out.write(" checked ");
 } 
      out.write(">\r\n");
      out.write("	                        <label for=\"fltrC");
      out.print(counter);
      out.write('"');
      out.write('>');
      out.print((String) obj);
      out.write("</label>\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    ");
 } 
      out.write("\r\n");
      out.write("	                    <button class=\"w-100 mb-2 btn btn-lg rounded-4 btn-primary\" type=\"submit\">Filtrar</button>\r\n");
      out.write("	                </form>\r\n");
      out.write("	            </div>\r\n");
      out.write("	        </div>\r\n");
      out.write("	    </div>\r\n");
      out.write("    </div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
